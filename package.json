{
  "name": "covegen-ai",
  "displayName": "covegen-ai",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onCommand:extension.generateTests"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "javascript",
        "extensions": [
          ".js"
        ]
      },
      {
        "id": "typescript",
        "extensions": [
          ".ts"
        ]
      }
    ],
    "commands": [
      {
        "command": "extension.generateTests",
        "title": "Generate Tests",
        "icon": "$(run)"
      },
      {
        "command": "extension.openTestConfig",
        "title": "Open Test Generator Configuration",
        "icon": "$(gear)"
      },
      {
        "command": "extension.refreshCoverage",
        "title": "Refresh Coverage Data",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.generateTests",
          "when": "editorLangId == typescript || editorLangId == javascript",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "extension.generateTests",
          "when": "view == fileExplorerWithMethods && viewItem == file",
          "group": "inline@1"
        },
        {
          "command": "extension.generateTests",
          "when": "view == fileExplorerWithMethods && viewItem == file",
          "group": "1_modification"
        },
        {
          "command": "extension.refreshCoverage",
          "when": "view == fileExplorerWithMethods",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "extension.refreshCoverage",
          "when": "view == fileExplorerWithMethods",
          "group": "navigation"
        },
        {
          "command": "extension.openTestConfig",
          "when": "view == fileExplorerWithMethods",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Test Generator Configuration",
      "properties": {
        "testGenerator.toolPath": {
          "type": "string",
          "default": "/Users/bin/Downloads/codes/nodejs/covegen-ai/mutahunter",
          "description": "Path to the test generation tool"
        },
        "testGenerator.model": {
          "type": "string",
          "default": "codestral/codestral-2501",
          "description": "AI model to use for test generation",
          "enum": [
            "codestral/codestral-2501",
            "codestral/codestral-7b",
            "codestral/codestral-34b"
          ]
        },
        "testGenerator.maxAttempts": {
          "type": "number",
          "default": 2,
          "minimum": 1,
          "maximum": 5,
          "description": "Maximum number of attempts for test generation"
        },
        "testGenerator.coverageThreshold": {
          "type": "number",
          "default": 95,
          "minimum": 0,
          "maximum": 100,
          "description": "Coverage threshold percentage above which test generation will be skipped"
        },
        "testGenerator.testCommand": {
          "type": "string",
          "default": "npx vitest run --coverage",
          "description": "Command to run tests and generate coverage"
        },
        "testGenerator.coverageType": {
          "type": "string",
          "default": "cobertura",
          "enum": ["cobertura", "lcov", "jacoco"],
          "description": "Type of coverage report to generate"
        },
        "testGenerator.testFileExtension": {
          "type": "string",
          "default": ".test.js",
          "enum": [".test.js", ".test.ts", ".spec.js", ".spec.ts"],
          "description": "Extension to use for generated test files"
        },
        "testGenerator.coveragePath": {
          "type": "string",
          "default": "coverage/coverage.xml",
          "description": "Path to the coverage report file (relative to workspace root)"
        },
        "testGenerator.apiBase": {
          "type": "string",
          "default": "",
          "description": "Base URL for API requests (optional)"
        },
        "testGenerator.includeFiles": {
          "type": "array",
          "default": ["package.json", "vitest.config.js"],
          "description": "Additional files to include in test generation",
          "items": {
            "type": "string"
          }
        },
        "testGenerator.customPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom prompt to pass to the test generation model"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "test-generator",
          "title": "CoveGen AI",
          "icon": "media/test-generator.svg"
        }
      ]
    },
    "views": {
      "test-generator": [
        {
          "id": "fileExplorerWithMethods",
          "name": "",
          "contextualTitle": "Test Generator"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "files": [
    "out",
    "media"
  ],
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.19.0",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@types/xml2js": "^0.4.14",
    "ignore": "^7.0.3",
    "tree-sitter": "^0.21.1",
    "tree-sitter-javascript": "^0.23.1",
    "tree-sitter-typescript": "^0.23.2",
    "xml2js": "^0.6.2"
  }
}
